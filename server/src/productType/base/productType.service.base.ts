/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ProductType as PrismaProductType } from "@prisma/client";

export class ProductTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProductTypeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.productType.count(args);
  }

  async productTypes(
    args: Prisma.ProductTypeFindManyArgs
  ): Promise<PrismaProductType[]> {
    return this.prisma.productType.findMany(args);
  }
  async productType(
    args: Prisma.ProductTypeFindUniqueArgs
  ): Promise<PrismaProductType | null> {
    return this.prisma.productType.findUnique(args);
  }
  async createProductType(
    args: Prisma.ProductTypeCreateArgs
  ): Promise<PrismaProductType> {
    return this.prisma.productType.create(args);
  }
  async updateProductType(
    args: Prisma.ProductTypeUpdateArgs
  ): Promise<PrismaProductType> {
    return this.prisma.productType.update(args);
  }
  async deleteProductType(
    args: Prisma.ProductTypeDeleteArgs
  ): Promise<PrismaProductType> {
    return this.prisma.productType.delete(args);
  }
}
